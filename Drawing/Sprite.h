#pragma once

#include <Windows.h>
#include <wrl.h>
#include <d3d12.h>
#include"Vector3.h"
#include"Vector2.h"
#include"Vector4.h"
#include"Matrix4.h"
#include"MyMath.h"

/// <summary>
/// スプライト
/// </summary>
class Sprite
{
private: 
	// Microsoft::WRL::を省略
	template <class T> using ComPtr = Microsoft::WRL::ComPtr<T>;

public: // サブクラス
	// 頂点データ構造体
	struct VertexPosUv
	{
		Vector3 pos; // xyz座標
		Vector2 uv;  // uv座標
	};

	// 定数バッファ用データ構造体
	struct ConstBufferData
	{
		Vector4 color;	// 色 (RGBA)
		Matrix4 mat;	// ３Ｄ変換行列
	};

public: // 静的メンバ関数

	/// 静的初期化
	static void StaticInitialize(ID3D12Device* device, int window_width, int window_height);

	// テクスチャ読み込み
	static void LoadTexture(UINT texnumber, const wchar_t* filename);

	// 描画前処理
	static void PreDraw(ID3D12GraphicsCommandList* cmdList);

	// 描画後処理
	static void PostDraw();

	// スプライト生成
	static Sprite* Create(UINT texNumber, Vector2 position, Vector4 color = { 1, 1, 1, 1 }, Vector2 anchorpoint = { 0.0f, 0.0f }, bool isFlipX = false, bool isFlipY = false);

	// 座標の取得
	const Vector2& GetPosition() { return position; }

	//カラー替え
	void SetColor(const Vector4& color) { this->color = color; }



private: // 静的メンバ変数
	// テクスチャの最大枚数
	static const int srvCount = 512;
	// 頂点数
	static const int vertNum = 4;
	// デバイス
	static ID3D12Device* device;
	// デスクリプタサイズ
	static UINT descriptorSize;
	// コマンドリスト
	static ID3D12GraphicsCommandList* cmdList;
	// ルートシグネチャ
	static ComPtr<ID3D12RootSignature> rootSignature;
	// パイプラインステートオブジェクト
	static ComPtr<ID3D12PipelineState> pipelineState;
	// 射影行列
	static Matrix4 matProjection;
	// デスクリプタヒープ
	static ComPtr<ID3D12DescriptorHeap> descHeap;
	// テクスチャバッファ
	static ComPtr<ID3D12Resource> texBuff[srvCount];

public: // メンバ関数

	// コンストラクタ
	Sprite(UINT texNumber, Vector2 position, Vector2 size, Vector4 color, Vector2 anchorpoint, bool isFlipX, bool isFlipY);

	// 初期化
	bool Initialize();

	// 角度の設定
	void SetRotation(float rotation);

	// 座標の設定
	void SetPosition(const Vector2& position);

	// サイズの設定
	void SetSize(const Vector2& size);

	// アンカーポイントの設定
	void SetAnchorPoint(const Vector2& anchorpoint);

	// 左右反転の設定
	void SetIsFlipX(bool isFlipX);

	// 上下反転の設定
	void SetIsFlipY(bool isFlipY);

	// テクスチャ範囲設定
	void SetTextureRect(const Vector2& texBase, const Vector2& texSize);

	/// <summary>
	/// 描画
	/// </summary>
	void Draw();

private: // メンバ変数

	// 頂点バッファ
	ComPtr<ID3D12Resource> vertBuff;

	// 定数バッファ
	ComPtr<ID3D12Resource> constBuff;

	// 頂点バッファビュー
	D3D12_VERTEX_BUFFER_VIEW vbView{};

	// テクスチャ番号
	UINT texNumber = 0;

	// Z軸回りの回転角
	float rotation = 0.0f;

	// 座標
	Vector2 position{};

	// スプライト幅、高さ
	Vector2 size = { 100.0f, 100.0f };

	// アンカーポイント
	Vector2 anchorpoint = { 0, 0 };

	// ワールド行列
	Matrix4 matWorld{};

	// 色
	Vector4 color = { 1, 1, 1, 1 };

	// 左右反転
	bool isFlipX = false;

	// 上下反転
	bool isFlipY = false;

	// テクスチャ始点
	Vector2 texBase = { 0, 0 };

	// テクスチャ幅、高さ
	Vector2 texSize = { 100.0f, 100.0f };

private: // メンバ関数
	// 頂点データ転送
	void TransferVertices();
};